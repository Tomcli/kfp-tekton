apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: create-pvc
spec:
  params:
  - name: size
  results:
  - description: '{}'
    name: create-pvc-manifest
  - description: '{.metadata.name}'
    name: create-pvc-name
  - description: '{.status.capacity.storage}'
    name: create-pvc-size
  steps:
  - action: create
    manifest: "apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: '{{workflow.name}}-my-pvc'\n\
      spec:\n  accessModes:\n  - ReadWriteMany\n  resources:\n    requests:\n    \
      \  storage: $(inputs.params.size)\n"
    name: create-pvc
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: cop
spec:
  params:
  - name: create-pvc-name
  steps:
  - args:
    - echo foo > /mnt/file1
    command:
    - sh
    - -c
    image: library/bash:4.4.23
    name: cop
    volumeMounts:
    - mountPath: /mnt
      name: create-pvc
  volumes:
  - name: create-pvc
    persistentVolumeClaim:
      claimName: $(inputs.params.create-pvc-name)
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  annotations:
    pipelines.kubeflow.org/pipeline_spec: '{"description": "A Basic Example on VolumeOp
      Usage.", "inputs": [{"name": "size"}], "name": "VolumeOp Basic"}'
  name: volumeop-basic
spec:
  params:
  - name: size
  tasks:
  - name: create-pvc
    params:
    - name: size
      value: $(params.size)
    taskRef:
      name: create-pvc
  - name: cop
    params:
    - name: create-pvc-name
      value: $(tasks.create-pvc.results.name)
    taskRef:
      name: cop
